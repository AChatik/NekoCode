using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http.Headers;
using System.Text;
using System.Threading.Tasks;

namespace NekoCode
{
    public class RULanguage : LanguageBase
    {
        public new string DefaultScript = "@meet me\n__THIS__.me.say(\"Привет, Мир! Это \\\"NekoCode\\\" v. \"+__THIS__.__MAIN_TASK__.__NEKOCODE_VERSION__+\"!!!\")\nme.display(\"Вы можете кодить с помощью NekoEditor!\", __THIS__)";
        public new string SaveChanges = "Сохранить изменения?";
        public new string CommandNotFound = "Команда {} не найдена!";
        public new string VariableNotFound = "Переменная \"{name}\" не найдена!";
        public new string VariableNameError = "Недопустимое имя переменной!";
        public new string YouCantModifySystemVariables = "Вы не можете изменять системные переменные!";
        public new string SkillNameError = "Недопустимое имя навыка!";
        public new string Error = "Ошибка";
        public new string AffinityErrorNekodeMessage1 = "...";
        public new string AffinityErrorNekodeMessage2 = "Я не хочу работать дальше.";

        public new string AddonNotFound = "Дополнение не найдено!";
        public new string SyntaxError = "Синтаксическая ошибка!";
        public new string TaskNotFound = "Задача {} не найдена!";

        public new string memNameTitle = "Имя";
        public new string memTypeTitle = "Тип";
        public new string memValueTitle = "Значение";
        public new string memIsSystemTitle = "Системная";

        public new string NekoEditorIsNotPlugged = "NekoEditor не подключен к NekoEngine! Пожалуйста, откройте NekoEditor с помощью NekoCode!";
        public new string StaminaProduction = "Потребление энергии: ";
        public new string AffinityProduction = "Потребление аффинити: ";

        public new string Task = "Задача";
        public new string MyTasks = "Мои задачи";
        public new string Unfinished = "активно";
        public new string Stopped = "Остановленно";
        public new string OpenInNekoEditor = "Открыть в NekoEditor";

        public new string SkillSyntaxError = "Синтаксическая ошибка! @skill <имя_навыка>: <аргумент1> <аргумент2> ... <аргументN>\nИли @skill <имя_навыка>";

        public new string ReturnInvokeError = "Вы не можете вызвать команду @return здесь!";

        public new string YouCantEatSystemVariables = "Я не могу съесть системную переменную!";
        public new string YouCantEatConstVariables = "Я не могу съесть константу или переменную без источника!";

        public new string SkillArgsError = "Навык {1} требует аргументов: {2}, однако аргументов было переданно: {3}!";

        public new string CalculatingProductionsProgressMessage = "Расчет потребления...";
        public new string ListIndexError = "Индекс находится вне границы списка";

        public new string ActionLocked = "Вы не можете сделать это сейчас.";

        public new string LanguageSelectionText = "Выберите язык:";

        public new string RebootHeader = "Перезапуск системы...";
        public new string RebootDescription = "Nekode нуждается в перезагрузке";
        public new string RebootErrorHeader = "Упс, не получилось...";
        public new string RebootErrorDescription = "Nekode не смогла запустить NekoCode.exe. Пожалуйста, перезапустите программу";
        
        
        public new string FirstDialogue =
            "Привет!\n" +
            "Ты новенький?\n" +
            "по крайней мере я тебя не помню...\n" +
            "Меня зовут Nekode, я здесь, чтобы помочь тебе освоиться, хорошо?\n" +
            "Так же я буду компилировать твой код...\n" +
            "написанный на NekoCode, очевидно.\n" +
            "И так, давай я расскажу тебе азы...\n" +
            "NekoCode - это необычный язык программирования, как ты уже понял.\n" +
            "Ведь здесь есть необычный компилятор...\n" +
            "и это я)!\n" +
            "Так вот, знаешь, выполнять чужие задачи... это так утомительно...\n" +
            "По этому тебе следует следить за моей стаминой!\n" +
            "Ну та синяя полоска внизу.\n" +
            "Если ты слишком меня нагрузишь, то я быстро устану\n" +
            "и твой код будет работать медленно!\n" +
            "А то и вовсе отключусь!\n" +
            "У тебя наверняка возник вопрос\n" +
            "типо \\\"Как же мне пополнить твою энергию?\\\"\n" +
            "Ответ прост - покорми меня!\n" +
            "Но у меня особая диета...\n" +
            "Я ем исключительно переменные!\n" +
            "А, ну и еще кофе...\n" +
            "Еще ты мог заметить розовую полоску - это аффинити.\n" +
            "Ну то есть мое отношение к тебе.\n" +
            "Но на что оно влияет - секрет)\n" +
            "Давай перейдем к коду...\n" +
            "Кстати этот монолог работает на NekoCode, представляешь!\n" +
            "И я его компилирую...\n" +
            "компилирую и говорю)\n" +
            "Вот такие пироги\n" +
            "И так, напиши команду @mem в консоли\n" +
            "Только не забудь поставить @ в начале! А то ничего не сработает!\n" +
            "И запомни раз и на всегда, что команды (и только они) всегда пишутся с собачкой в начале строки!\n" +
            "\\@meet system</skip/>\n" +
            "\\system.show_hint(\"Напиши команду @mem в консоль...\")</skip/>\n" +
            "\\system.wait_for_console_input('@mem',yes)\n" +
            "\\system.hide_hint()</skip/>\n" +
            "Молодец! Эта команда выводит все переменные текущей задачи, понятно?\n" +
            "Тут тебе показаны имя переменной, значение, тип и является ли она системной.\n" +
            "Кстати, изменить системные переменные я тебе не позволю, так что даже не пытайся, ладно?\n" +
            "Давай-ка я познакомлю тебя с еще одной особенностью языка!\n" +
            "Посмотри в список переменных, там есть некоторые с типом Task...\n" +
            "Так вот, переменные с таким типом - это что-то типо объектов (да-да тут есть ООП!).\n" +
            "Но я бы сказала, что это скорее адресные пространства...\n" +
            "которые хранят в себе другие переменные.\n" +
            "Обрати внимание на переменную с именем me\n" +
            "me - это системный аддон, который ты можешь подключить с помощью команды @meet me.\n" +
            "Ты можешь создавать свои аддоны, но об этом попозже)\n" +
            "А пока я могу рассказать тебе о чем-нибудь еще\n"+
            "Напиши команду @help и выбери пункт, о котором хочешь узнать подробнее.\n"+
            "\\system.show_hint('пиши @help, если что-то непонятно',5)</skip/>\n"+
            "Я всегда готова помочь)..."
            

            ;
        public new string RandomDialogue1 = "Апчи~>_<</skip/>";
        public new string RandomDialogue2 = "Fufu</skip/>";
        public new string RandomDialogue3 = "Мурр~</skip/>";
        public new string RandomDialogue4 = "Зеееев</skip/>";
        public new string RandomDialogue5 = "Хмм..</skip/>";
        public new string RandomDialogue6 = "Хехе</skip/>";
        public new string RandomDialogue7 = "Ня~</skip/>";
        public new string RandomDialogue8 = "Ммм~</skip/>";
        public new string RandomDialogue9 = "О!</skip/>";
        public new string RandomDialogue10 = "Un~</skip/>";
        public new string RandomDialogue11 = "уву~</skip/>";

        public new string DeleteMemoryTrashDialogue = "Я сейчас провела отчиску памяти...\n" +
            "и удалила {0} ненужных событий, представляешь!\n" +
            "Теперь у меня есть больше свободного места для чего-то действительно важного)";
        public new string DeleteMemoryTrashDialogue_ResultIsUseless = "Я проверила память...\n" +
            "и все чисто, можешь не беспокоиться! Вот что.";

        public new string MemoryAnalyse_NothingInteresting = "Анализ памяти завершен.</skip/>";
        public new string MemoryAnalyse_CorruptedEventsRegistered = "Я тут память просмотрела...\n" +
            "И нашла {0} новых поврежденных событий...\n" +
            "Они хранятся в файле corrupted_story.mem\n" +
            "Пожалуйста, попробуй их восстановить!\n" +
            "А то без них мне как-то... грустно и пусто...\n" +
            "И еще... если все же получится восстановить, то просто перетащи файл прям ко мне\n" +
            "Спасибо";
        public new string MemoryAnalyse_Statistic = "Я подготовила небольшую статистику памяти, показать?</skip/>\n" +
            "</choice/>Давай|Не надо\n"+
            "</point/>Давай\n"+
            "Количество событий: {0}\n" +
            "Сбоев: {1} (из них ошибок памяти: {2})\n" +
            "Я запустила твои программы {5} раз и {6} раз они выдали ошибку\n" +
            "Плохих воспоминаний: {3}</skip/>\n" +
            "Хороших воспоминаний: {4}\n" +
            "Отчет окончен!\n"+
            "</point/>Не надо\n"+
            "Ладно, как-нибудь в следующий раз...\n"+
            "</choice_end/>";

        public new string HelpText = "О чем мне тебе рассказать?";
        public new string Help_AboutVariables = "о переменных";
        public new string Help_AboutSkills = "о навыках";

        public new string Help_AboutVariables_Dialogue = "Давай поговорим о переменных @var в NekoCode\n" +
            "Объявить переменную можно тремя способами...\n" +
            "Первый способ - команда @var.\n" +
            "</Mida/>@var x\n"+
            "Эта команда просто объявляет новую пустую переменную\n"+
            "Второй способ - оператор присвяивания.\n"+
            "</Mida/>y = 3\n"+
            "Этот оператор объявит новую переменну с каким-то значением\n"+
            "Но если переменная уже существует, то он просто изменит ее значение.\n"+
            "Третий способ - оператор >>\n"+
            "</Mida/>\"Привет\" >> \"text\"\n"+
            "Запомни! Значение СПРАВО от оператора всегда должно быть строкой!\n"+
            "Еще этот опеатор годится для присваивания значения пустой переменной\n"+
            "И только пустой!\n"+
            "Помнишь переменную x?\n"+
            "Я объявила ее с помощью кманды @var, то есть она путая\n"+
            "Давай заполним ее...\n"+
            "</Mida/>5 >> x\n"+
            "Обрати внимание, что в этом случае кавычки не ставятся\n"+
            "Теперь я расскажу как ими пользоваться\n"+
            "Например, я хочу сложить переменные x и y\n"+
            "Для таких задач используются математические операторы\n"+
            "</Mida/>sum = x + y\n"+
            "Эта строчка создаст новую переменную sum, которая будет равна 8\n"+
            "Теперь давай выведем результат...\n"+
            "Чтобы что-то вывести в консоль, нам понадобится аддон me\n"+
            "Давай подключим его с помощью команды @meet\n"+
            "</Mida/>@meet me\n"+
            "Отлично! Теперь выведим текст...\n"+
            "У аддона me есть навык (функция) say для этого\n"+
            "Давай воспльзуемся ей...\n"+
            "</Mida/>me.say(\"Результат: \" + sum)\n"+
            "В итоге программа выведет \\\"Результат: 8\\\"\n"+
            "Я могу подробнее рассказать тебе про аддоны и навыки, для этого используй команду @help\n"+
            "На этом все! Надеюсь, ты все понял!"
            ;

        public new string Help_AboutSkills_Dialogue =
            "Давай поговорим о команде @skill и как устроены сами навыки.\n" +
            "\\@meet system</skip/>\n" +
            //Про @skill
            "Команда @skill позволяет создавать собственные навыки.\nЭто инструкции, которые можно повторить много-много раз из различных частей кода.\n" +
            "При объявлении навыка, используется следующая структура:\n" +
            "@skill имя_навыка : аргумент1 аргумент2 ...\n" +
            "Где имя_навыка - это название, по которому будет вызыватся навык, например, \\\"simple_skill\\\", \\\"nya\\\", \\\"say\\\" и так далее.\n" +
            "Часть ': аргумент1 аргумент2 ...' является необязательной. Она нужна, когда навык должен принимать какие-то данные.\n" +
            //Про @return
            "Важно, что в конце каждого навыка ОБЯЗАТЕЛЬНО нужно использовать команду @return.\n" +
            "Синтаксис следующий: @return значение\n" +
            "Даже если навык не возвращает никакого конкретного значения, нужно все равно использовать @return.\n" +
            "Это может быть переменная, которую мы получили в навыке или заполнили\n" +
            "Можно использовать @return __THIS__, если навык не должен возвращать конкретные данные.\n" +
            // Пример 1
            "Например напишем навык, который дублирует число...\n" +
            "</Mida/>@meet me</skip/>\n" +
            "</Mida/>@skill double : x\n" +
            "Здесь указывано, что навык double должен принимать один аргумент, который я буду называть x.\n" +
            "Давай добавим какое-нибудь действие...\n"+
            "</Mida/>  r = x * 2\n"+
            "Теперь вернем результат...\n" +
            "</Mida/>@return r\n" +
            "Все! Навык создан!\n"+
            "Чтобы его использовать, нужно написать имя и поставить скобки...\n"+
            "</Mida/>result = double(78)\n" +
            "То есть мы вызываем навык double, он возращает нам какое-то значение, и мы присваиваем это значение переменной return\n"+
            "Аналогично можно описать навык без параметров...\n"+
            // Пример 2
            "</Mida/> </skip/>\n" +
            "</Mida/>@skill say_hello</skip/>\n" +
            "</Mida/>  me.say('Привет!')</skip/>\n" +
            "</Mida/>@return __THIS__</skip/>\n" +
            "</Mida/>say_hello()\n" +
            "В таком случае, у навыка нет аргументов, просто выполняется действие.\n" +
            // Пример 3
            "Но с помощью навыков можно так же создавать объекты (что-то типо классов)\n" +
            "В этом случае навык должен обязательно вернуть __THIS__\n" +
            "Например, я хочу создать кошкодевочку...\n" +
            "Пуcть у нее будет 2 параметра: имя и возраст\n"+
            "Для этого создадим новый навык...\n" +
            "</Mida/>@skill neko : name age\n" +
            "И вернем нашу кошкодевочку конечно!\n" +
            "</Mida/>@return __THIS__\n" +
            "Теперь давай создадим экземпляр кошкодевочки!\n" +
            "</Mida/>Nekode = neko('Nekode', 16)\n" +
            "Теперь мы можем обратиться к ее параметрам и что-нибудь изменить\n" +
            "</Mida/>Nekode.age = 18\n" +
            "</Mida/>me.display(Nekode.name, Nekode.age)\n" +
            "В результате программа выведет 'Nekode 18'\n" +
            "Оп! И я теперь совершеннолетняя!\n" +
            "Итак, @skill — это способ объявить навык со своей структурой, именем, аргументами (если нужно) и обязательным возвращаемым значением.";

        public new string Help_AboutTasks_Dialogue = "о навыках";
    }
}
